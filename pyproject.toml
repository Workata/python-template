[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "app-name"
description = "Python project template"

version = "1.0.0" 

readme = "README.md"
license = {file = "LICENSE.txt"}

requires-python = ">=3.8"
dependencies = [
  ""
]

keywords = ["sample", "development"]

authors = [
  {name = "A. Random Developer", email = "author@example.com" }
]
maintainers = [
  {name = "A. Great Maintainer", email = "maintainer@example.com" }
]

# For a list of valid classifiers, see https://pypi.org/classifiers/
classifiers = [
  # How mature is this project? Common values are
  #   3 - Alpha
  #   4 - Beta
  #   5 - Production/Stable
  "Development Status :: 3 - Alpha",

  # Indicate who your project is intended for
  "Intended Audience :: Developers",
  "Topic :: Software Development :: Build Tools",

  # Pick your license as you wish
  "License :: OSI Approved :: MIT License",

  # Specify the Python versions you support here. In particular, ensure
  # that you indicate you support Python 3. These classifiers are *not*
  # checked by "pip install". See instead "requires-python" key in this file.
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3 :: Only",
]

####################################################### mypy #########################################################

[tool.mypy]
ignore_missing_imports = true
check_untyped_defs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = false
disallow_any_unimported = false
warn_return_any = true
warn_unused_ignores = true
no_implicit_optional = true
show_error_codes = true

exclude = ['src/tests/']

####################################################### ruff #########################################################

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

line-length = 120
indent-width = 4

[tool.ruff.lint]
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"


####################################################### pytest #########################################################
[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = "./src/"


####################################################### coveragepy #########################################################
[tool.coverage.run]
omit = [
    "*__init__*",
    "*test*"
]

[tool.coverage.report]
precision = 2
fail_under = 100.00
